name: Generate geopackages for NHSL

# Workflow runs when manually triggered using the UI or API.
on:
  push:
    branches: [geopackage-action]
  workflow_dispatch:

jobs:
  build-gpkgs:
    runs-on: ubuntu-latest

    steps:
    - name: Free up disk space by deleting unused software
      run: |
        df -h
        $TIME_RUN sudo eatmydata rm -rf /usr/share/dotnet       # 24.1 GB
        $TIME_RUN sudo eatmydata rm -rf /usr/local/lib/android  # 11.3 GB
        $TIME_RUN sudo eatmydata rm -rf /opt/ghc                #  1.8 GB
        $TIME_RUN sudo eatmydata rm -rf /usr/share/swift        #  1.3 GB
        $TIME_RUN sudo eatmydata rm -rf /usr/local/graalvm      #  1.0 GB
        df -h

    - name: Checkout using current working branch with lfs enabled
      uses: actions/checkout@v2
      with:
        ref: update_dsra_psra_oct2021
        lfs: 'true'

    - name: Setup .env
      env:
        MY_PAT: ${{ secrets.MY_PAT }}   
      run: |
        cat <<EOF > .env
        POSTGRES_USER=postgres
        POSTGRES_PASS=password
        POSTGRES_PORT=5432
        POSTGRES_HOST=db-opendrr
        DB_NAME=opendrr
        POPULATE_DB=0

        KIBANA_ENDPOINT=http://kibana-opendrr:5601
        ES_ENDPOINT=http://elasticsearch-opendrr:9200

        loadDsraScenario=false
        loadPsraModels=false
        loadHazardThreat=false
        loadPhysicalExposure=true
        loadRiskDynamics=false
        loadSocialFabric=true
        loadHexGrid=false

        ADD_DATA_PRINT_FUNCNAME=true
        ADD_DATA_PRINT_LINENO=true
        EOF
        chmod 600 .env

        cat <<EOF > python/config.ini
        [rds]
        postgres_host = db-opendrr
        postgres_port = 5432
        postgres_un = postgres
        postgres_pw = password
        postgres_db = opendrr
        postgres_address = db-opendrr:5432/opendrr

        [es]
        es_un = elastic
        es_pw = changeme
        es_endpoint = elasticsearch-opendrr:9200
        kibana_endpoint = localhost:5601

        [auth]
        github_token = $MY_PAT
        EOF
        chmod 600 python/config.ini

    - name: Set up docker containers, build database, and exit with timeout
      continue-on-error: true
      run: docker compose up --build
      # Once testing is complete, increase to avoid early timeout
      timeout-minutes: 150

    - name: Install ogr2ogr
      run: |
        sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
        sudo apt-get update
        sudo apt-get install gdal-bin
        npm install ogr2ogr

    - name: Generate gpkg
      run: |
        mkdir pe sf temp

        pepacks=(nhsl_physical_exposure_indicators_b nhsl_physical_exposure_indicators_b_ab nhsl_physical_exposure_indicators_b_bc nhsl_physical_exposure_indicators_b_mb nhsl_physical_exposure_indicators_b_nb nhsl_physical_exposure_indicators_b_nl nhsl_physical_exposure_indicators_b_ns nhsl_physical_exposure_indicators_b_nt nhsl_physical_exposure_indicators_b_nu nhsl_physical_exposure_indicators_b_on nhsl_physical_exposure_indicators_b_pe nhsl_physical_exposure_indicators_b_qc nhsl_physical_exposure_indicators_b_sk nhsl_physical_exposure_indicators_b_yt nhsl_physical_exposure_indicators_s nhsl_physical_exposure_indicators_s_ab nhsl_physical_exposure_indicators_s_bc nhsl_physical_exposure_indicators_s_mb nhsl_physical_exposure_indicators_s_nb nhsl_physical_exposure_indicators_s_nl nhsl_physical_exposure_indicators_s_ns nhsl_physical_exposure_indicators_s_nt nhsl_physical_exposure_indicators_s_nu nhsl_physical_exposure_indicators_s_on nhsl_physical_exposure_indicators_s_pe nhsl_physical_exposure_indicators_s_qc nhsl_physical_exposure_indicators_s_sk nhsl_physical_exposure_indicators_s_yt)
        for i in "${pepacks[@]}"
        do
          ogr2ogr -f GPKG temp/$i.gpkg PG:"host=localhost port=5432 user=postgres dbname=opendrr password=password" -sql "SELECT * FROM results_nhsl_physical_exposure.$i" -nln $i
          zip pe/$i temp/$i.gpkg
        done

        sfpacks=(nhsl_social_fabric_indicators_s nhsl_social_fabric_indicators_s_ab nhsl_social_fabric_indicators_s_bc nhsl_social_fabric_indicators_s_mb nhsl_social_fabric_indicators_s_nb nhsl_social_fabric_indicators_s_nl nhsl_social_fabric_indicators_s_ns nhsl_social_fabric_indicators_s_nt nhsl_social_fabric_indicators_s_nu nhsl_social_fabric_indicators_s_on nhsl_social_fabric_indicators_s_pe nhsl_social_fabric_indicators_s_qc nhsl_social_fabric_indicators_s_sk nhsl_social_fabric_indicators_s_yt)
        for i in "${sfpacks[@]}"
        do
          ogr2ogr -f GPKG temp/$i.gpkg PG:"host=localhost port=5432 user=postgres dbname=opendrr password=password" -sql "SELECT * FROM results_nhsl_social_fabric.$i" -nln $i
          zip sf/$i temp/$i.gpkg
        done

    - name: Push files to geopackage-update branch and open PR in NHSL repo
      env:
        # PAT requires read:org
        GITHUB_TOKEN: ${{ secrets.MY_PAT }}
      run: |
        HOME=$PWD
        DESTINATION_REPO="DamonU2/national-human-settlement"

        TEMP_DIR=$(mktemp -d)

        echo "Cloning national-human-settlement repository"
        git clone "https://$GITHUB_TOKEN@github.com/$DESTINATION_REPO.git" "$TEMP_DIR"
        cd $TEMP_DIR
        git fetch -a

        EXISTING_BRANCH=$(git show-ref "geopackage-update" | wc -l)
        if [ $EXISTING_BRANCH == 0 ];
        then
          git checkout -b "geopackage-update"
        else
          git checkout "geopackage-update"
        fi

        echo "Copying physical exposure files"
        rsync -r --progress "$HOME/pe/." "$TEMP_DIR/physical-exposure/data"

        echo "Copying social fabric files"
        rsync -r --progress "$HOME/sf/." "$TEMP_DIR/social-fabric/data"

        git add .
        git status
        CHANGES=$(git status -s | wc -l)

        git config --global user.email "damon_ulmi@hotmail.com"
        git config --global user.name "DamonU2"

        if [ $CHANGES != 0 ];
        then
          git commit -m "Updates to geopackages"
          echo "Pushing commit"
          git push -u origin HEAD:geopackage-update

          if [ $EXISTING_BRANCH == 0 ];
          then
            echo "Creating a pull request"
            gh pr create --fill -B main -H geopackage-update
          else
            echo "Updating pull request"
            gh pr edit geopackage-update -b "Updated"
          fi
        else
          echo "No changes made"
        fi
